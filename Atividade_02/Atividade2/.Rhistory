+     b, l = 20)), 0), col = "gray")
a <- 9.9
b <- 10.1
a.n <- "9.9mm"
b.n <- "10.1mm"
plot(dnorm, -4, 4, xlab = "", ylab = "", axes = F, bty = "o")
plot(dnorm, -4, 4, xlab = "", ylab = "", axes = F, bty = "o")
polygon(x = c(a, seq(a, b, l = 20), b), y = c(0, dnorm(seq(a,
+     b, l = 20)), 0), col = "gray")
text(c(a, b), c(-0.011, -0.011), c(a.n, b.n), cex = 0.6)
segments(-4, -0.0987, 4, -0.0987)
a <- 9.9
b <- 10.1
a.n <- "9.9mm"
b.n <- "10.1mm"
plot(dnorm, -4, 4, xlab = "", ylab = "", axes = F, bty = "o")
polygon(x = c(a, seq(a, b, l = 20), b), y = c(0, dnorm(seq(a,
+     b, l = 20)), 0), col = "gray")
text(c(a, b), c(-0.0987, -0.0987), c(a.n, b.n), cex = 0.6)
segments(-4, -0.0987, 4, -0.0987)
quantile(df$`Idade do Segurado`,type=2)
boxplot(box, main = "Box plot")
boxplot(df$`Idade do Segurado`,main="Box plot")
par<-op
boxplot.stats(df$`Idade do Segurado`)
summary(df)
summary(df$`Idade do Segurado`,df$`Valor Total Liberado`)
summary(df$`Idade do Segurado`)+
summary(df$`Valor Total Liberado`)
summary(df$`Idade do Segurado`)
summary(df$`Valor Total Liberado`)
tapply(df)
tapply(df$`Valor Total Liberado`)
summary(df$`Valor Total Liberado`)
tapply(df$`Valor Total Liberado`,df$`Idade do Segurado`)
tapply(df$`Valor Total Liberado`,df$`Idade do Segurado`,mean)
df2 <- tapply(df$`Valor Total Liberado`,df$`Idade do Segurado`,mean)
df2
plot(df2$'Valor Total Liberado',df2$`Idade do Segurado`)
plot(df2)
df3<-data.frame(df2)
df3
plot(df3)
hito(df3)
hit(df3)
plot.hit(df3)
df3$df2
df3$'Idade do SEgurado'
#tirando valores nulos
tratado <- ifelse(df2<>NULL)
#tirando valores nulos
tratado <- ifelse(df2<>NULL,"não nulo","nulo")
#criando grafico normal
curve(dnorm(x), from = min(df$`Idade do Segurado`), to = max(df$`Idade do Segurado`), ylab = "")
segments(1, -0.2, 1, 0.243)
text(0, 0.1, "P")
#criando grafico normal
curve(dnorm(x), from = min(df$`Idade do Segurado`), to = max(df$`Idade do Segurado`), ylab = "")
#criando grafico normal
curve(dnorm(x), from = min(df$`Idade do Segurado`), to = max(df$`Idade do Segurado`), ylab = "")
curve(dnorm(x, m = 20, sd = 3), from = 0, to = max(df$`Idade do Segurado`), main = "Distribuição Normal")
curve(dnorm(x, m = max(df$`Valor Total Liberado`), sd = 3), from = 0, to = max(df$`Idade do Segurado`), main = "Distribuição Normal")
curve(dnorm(x, m = max(df$`Valor Total Liberado`), sd = 3), from = min(df$`Idade do Segurado`), to = max(df$`Idade do Segurado`), main = "Distribuição Normal")
curve(dnorm(df$`Valor Total Liberado`), from = min(df$`Idade do Segurado`), to = max(df$`Idade do Segurado`), main = "Distribuição Normal")
curve(dnorm(df), from = min(df$`Idade do Segurado`), to = max(df$`Idade do Segurado`), main = "Distribuição Normal")
curve(dnorm(), from = min(df$`Idade do Segurado`), to = max(df$`Idade do Segurado`), main = "Distribuição Normal")
curve(dnorm, from = min(df$`Idade do Segurado`), to = max(df$`Idade do Segurado`), main = "Distribuição Normal")
#analisando tipo de dados e colunas
class(df)
str(df)
curve(dnorm, from = min(df$`Valor Total Liberado`), to = max(df$`Idade do Segurado`), main = "Distribuição Normal")
curve(dnorm, from = min(df$`Valor Total Liberado`), to = max(df$`Valor Total Liberado`), main = "Distribuição Normal")
a <- 0
b <- 2
a.n <- "0"
b.n <- "2"
plot(dnorm, -4, 4, xlab = "", ylab = "", axes = F, bty = "n")
polygon(x = c(a, seq(a, b, l = 20), b), y = c(0, dnorm(seq(a,
+     b, l = 20)), 0), col = "gray")
text(c(a, b), c(-0.011, -0.011), c(a.n, b.n), cex = 0.6)
segments(-4, -0.004, 4, -0.004)
library(ggplot2)
dados_0<- data.frame(espes = rnorm(200,9.897,0.0987))
ggplot(dados_0)+
aes(x=espes)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$espes), sd=sd(dados_0$espes)))
a <- 0
b <- 2
a.n <- "0"
b.n <- "2"
plot(dnorm, -4, 4, xlab = "", ylab = "", axes = F, bty = "n")
polygon(x = c(a, seq(a, b, l = 20), b), y = c(0, dnorm(seq(a,
+     b, l = 20)), 0), col = "gray")
text(c(a, b), c(-0.011, -0.011), c(a.n, b.n), cex = 0.6)
segments(-4, -0.004, 4, -0.004)
a <- 0
b <- 2
a.n <- "0"
b.n <- "2"
plot(dnorm, -4, 4, xlab = "", ylab = "", axes = F, bty = "n")
library(ggplot2)
dados_0<- data.frame(espes = rnorm(200,9.897,0.0987))
ggplot(dados_0)+
aes(x=espes)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$espes), sd=sd(dados_0$espes)))
polygon(x = c(a, seq(9.9, 10.1, l = 20), b), y = c(0, dnorm(seq(a,
+     b, l = 20)), 0), col = "gray")
polygon(x = c(a, seq(9.9, 10.1, l = 20), b), y = c(9.9, dnorm(seq(a,
+     b, l = 20)), 9.9), col = "gray")
polygon(x = c(a, seq(9.9, 10.1, l = 20), b), y = c(0, dnorm(seq(9.9,
+     10.1, l = 20)), 0), col = "gray")
polygon(x = c(9.9, seq(9.9, 10.1, l = 20), 10.1), y = c(0, dnorm(seq(9.9,
+     10.1, l = 20)), 0), col = "gray")
polygon(x = c(9.9, seq(9.9, 10.1, l = 20), 10.1), y = c(9.897, dnorm(seq(9.9,
+     10.1, l = 20)), 9.897), col = "gray")
library(ggplot2)
dados_0<- data.frame(espes = rnorm(200,9.897,0.0987))
ggplot(dados_0)+
aes(x=espes)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$espes), sd=sd(dados_0$espes)))
polygon(x = c(9.9, seq(9.9, 10.1, l = 20), 10.1), y = c(9.897, dnorm(seq(9.9,
+     10.1, l = 20)), 9.897), col = "gray")
a <- 0
a <- 0
b <- 2
a.n <- "0"
b.n <- "2"
plot(dnorm, -4, 4, xlab = "", ylab = "", axes = F, bty = "n")
polygon(x = c(a, seq(a, b, l = 20), b), y = c(0, dnorm(seq(a,
+     b, l = 20)), 0), col = "gray")
text(c(a, b), c(-0.011, -0.011), c(a.n, b.n), cex = 0.6)
segments(-4, -0.004, 4, -0.004)
library(ggplot2)
dados_0<- data.frame(espes = rnorm(200,9.897,0.0987))
ggplot(dados_0)+
aes(x=espes)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$espes), sd=sd(dados_0$espes)))
polygon(x = c(9.9, seq(9.9, 10.1, l = 20), 10.1), y = c(9.897, dnorm(seq(9.9,
+     10.1, l = 20)), 9.897), col = "gray")
polygon(x = c(9.9, seq(9.9, 10.1, l = 20), 10.1), y = c(9.897, dnorm(seq(9.9,
+     10.1, l = 20)), 9.897), col = "Black")
view(df)
#importação de banco de dados
df <- readr::read_csv("C:/Users/mateus/Desktop/Projetos_R/pacientes.csv")
df
#analisando tipo de dados e colunas
class(df)
str(df)
is.na(df)
any(is.na(df))
df_1 <- na.omit(df)
#verificando quantas observações
nrow(df_1)
#verificando quantas observações
nrow(df)
nrow(df_1)
#percentual de dados faltantes em cada coluna
NAS <- round(colSums(is.na(df))*100/nrow(df),2)
Nas
NAS
View(df)
NAS[NAS>0]
colSums(is.na(df))
nrow(df)
mean(df$`Valor Total Liberado`)
#substituindo dados faltantes por média
df$`Valor Total Liberado`[is.na(df$`Valor Total Liberado`)] <- mean(df$`Valor Total Liberado`, na.rm = TRUE)
mean(df$`Valor Total Liberado`)
#atualizando df_1 com dados tratados
df_1 <- na.omit(df)
nrow(df)
nrow(df_1)
#percentual de dados faltantes em cada coluna
NAS <- round(colSums(is.na(df_1))*100/nrow(df_1),2)
NAS
NAS[NAS>0]
any(is.na(df_1))
#calculando desvio padrão
sd(df_1$`Valor Total Liberado`)
mean(df_1$`Valor Total Liberado`)
dados_0<- data.frame(espes = rnorm(27750,86508.76,49024.49))
ggplot(dados_0)+
aes(x=espes)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$espes), sd=sd(dados_0$espes)))
library(ggplot2)
dados_0<- data.frame(espes = rnorm(27750,86508.76,49024.49))
ggplot(dados_0)+
aes(x=espes)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$espes), sd=sd(dados_0$espes)))
dados_0<- data.frame(valor = rnorm(27750,86508.76,49024.49))
ggplot(dados_0)+
aes(x=valor)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
ggplot(dados_0)+
aes(x=valor)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..Densidade..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
ggplot(dados_0)+
aes(x=valor)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..Densidade..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
ggplot(dados_0)+
aes(x=valor)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
ggplot(dados_0)+
aes(x='Valor Total Liberado')+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
dados_0<- data.frame(valor = rnorm(27750,86508.76,49024.49))
ggplot(dados_0)+
aes(x='Valor Total Liberado')+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
ggplot(dados_0)+
aes(x=valor)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
plot(df_1$`Idade do Segurado`,df_1$`Valor Total Liberado`)
mean(df_1$`Idade do Segurado`,df_1$`Valor Total Liberado`)
plot(mean(df_1$`Idade do Segurado`),mean(df_1$`Valor Total Liberado`))
plot((df_1$`Idade do Segurado`),mean(df_1$`Valor Total Liberado`))
plot(df_1$`Idade do Segurado`,mean(df_1$`Valor Total Liberado`))
plot(mean(df_1$`Valor Total Liberado`,df_1$`Idade do Segurado`))
hist(dados_0)
dados_0<- data.frame(valor = rnorm(27750,86508.76,49024.49))
ggplot(dados_0)+
aes(x=valor)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
hist(dados_0)
hist(dados_0,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
dados_valor <- df_1$`Valor Total Liberado`
dados_valor <- data.frame(df_1$`Valor Total Liberado`)
hist(dados_valor,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(dados_valor), sd = sd(dados_valor)), add = T)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
curve(dnorm(valor, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 40)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 30)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
curve(dnorm(x, mean = mean(dados_0), sd = sd(dados_0)), add = T)
hist(dados_0,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(dados_0), sd = sd(dados_0)), add = T)
dados_0<- data.frame(valor = rnorm(27750,86508.76,49024.49))
hist(dados_0,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(dados_0), sd = sd(dados_0)), add = T)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
valor_idade <- data.frame(df_1[df_1$`Idade do Segurado`,df_1$`Valor Total Liberado`])
valor_idade <- data.frame(df_1$`Idade do Segurado`,df_1$`Valor Total Liberado`)
valor_idade
#criacao de novo grafico
hist(valor_idade,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(valor_idade), sd = sd(valor_idade)), add = T)
glimpse(valor_idade)
install.packages(glimpse)
library(glimpse)
library(dplyr)
glimpse(valor_idade)
#contando quantidade de linhas
max(df$ID)
#calculando média de Valor total liberado
mean(df$`Valor Total Liberado`)
library(ggplot2)
dados_0<- data.frame(valor = rnorm(27750,86508.76,49024.49))
ggplot(dados_0)+
aes(x=valor)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
#plotando grafico de valor total liberado com dados tratados
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Idade do Segurado`)), add = T)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
#criacao de novo grafico
hist(valor_idade,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
#identificando tipos de colunas
glimpse(valor_idade)
#carregando pacotes
library(dplyr)
library(readr)
#identificando tipos de colunas
glimpse(valor_idade)
class(valor_idade)
class(valor_idade$df_1..Idade.do.Segurado.)
class(valor_idade$df_1..Valor.Total.Liberado.)
as.integer(valor_idade$df_1..Valor.Total.Liberado.)
class(valor_idade$df_1..Valor.Total.Liberado.)
as.integer(valor_idade$df_1..Idade.do.Segurado.)
valor_idade$'Idade do Segurado' <- as.integer(valor_idade$df_1..Idade.do.Segurado.)
#identificando tipos de colunas
glimpse(valor_idade)
valor_idade$'Valor Total Liberado' <- valor_idade$df_1..Valor.Total.Liberado.
#identificando tipos de colunas
glimpse(valor_idade)
valor_idade$'Valor Total Liberado' <- as.numeric(valor_idade$df_1..Valor.Total.Liberado.)
#identificando tipos de colunas
glimpse(valor_idade)
#criacao de novo grafico
hist(valor_idade,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = 'Valor Total liberado',
breaks = 20)
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
hist(valor_idade$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(valor_idade$`Valor Total Liberado`), sd = sd(valor_idade$`Valor Total Liberado`)), add = T)
library(ggplot2)
dados_0<- data.frame(valor = rnorm(27750,86508.76,49024.49))
ggplot(dados_0)+
aes(x=valor)+
geom_histogram(fill="lightblue",
col = "black",
alpha = 0.5,
bins = 20,
aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = mean(dados_0$valor), sd=sd(dados_0$valor)))
hist(df_1$`Valor Total Liberado`,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = "Valor Total liberado",
breaks = 20)
curve(dnorm(x, mean = mean(df_1$`Valor Total Liberado`), sd = sd(df_1$`Valor Total Liberado`)), add = T)
valor_idade <- data.frame(df_1$`Idade do Segurado`,df_1$`Valor Total Liberado`)
valor_idade
#criacao de novo grafico
hist(valor_idade,
col = "lightblue",
freq = F,
main = "Distribuicao Valor total liberado",
xlabel = 'Valor Total liberado',
breaks = 20)
curve(dnorm(x, mean = mean(valor_idade), sd = sd(valor_idade)), add = T)
#identificando tipos de colunas
glimpse(valor_idade)
#modificando tipos de colunas
class(valor_idade$df_1..Valor.Total.Liberado.)
valor_idade$'Idade do Segurado' <- as.integer(valor_idade$df_1..Idade.do.Segurado.)
valor_idade$'Valor Total Liberado' <- as.numeric(valor_idade$df_1..Valor.Total.Liberado.)
